// Sentry Sentinel Theme - SCSS Example
// Demonstrates SCSS features and syntax highlighting

// Variables
$sentry-purple-primary: #362D59;
$sentry-purple-secondary: #6559D1;
$sentry-pink: #E1567C;
$sentry-orange: #F4834F;

// Color Maps
$colors: (
  'background': #1A1625,
  'surface': #2A2438,
  'text': #FFFFFF,
  'text-muted': #A1A1AA,
  'error': $sentry-pink,
  'warning': $sentry-orange,
  'success': #10B981,
);

// Spacing Scale
$spacers: (
  'xs': 0.25rem,
  'sm': 0.5rem,
  'md': 1rem,
  'lg': 1.5rem,
  'xl': 2rem,
  'xxl': 3rem,
);

// Mixins
@mixin flex-center($direction: row) {
  display: flex;
  flex-direction: $direction;
  align-items: center;
  justify-content: center;
}

@mixin button-variant($bg-color, $text-color: white) {
  background-color: $bg-color;
  color: $text-color;
  border: none;
  border-radius: 6px;
  padding: map-get($spacers, 'sm') map-get($spacers, 'md');
  font-weight: 500;
  transition: all 250ms ease-in-out;
  
  &:hover:not(:disabled) {
    background-color: lighten($bg-color, 10%);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba($bg-color, 0.3);
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  &:focus-visible {
    outline: 2px solid $bg-color;
    outline-offset: 2px;
  }
}

// Functions
@function color($key) {
  @if map-has-key($colors, $key) {
    @return map-get($colors, $key);
  }
  @warn "Color '#{$key}' not found in $colors map.";
  @return null;
}

@function space($key) {
  @return map-get($spacers, $key);
}

// Placeholder Selectors
%card-base {
  background: color('surface');
  border-radius: 8px;
  padding: space('lg');
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

// Component Styles
.sentry-app {
  min-height: 100vh;
  background: color('background');
  color: color('text');
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  
  // Header Component
  &__header {
    background: linear-gradient(135deg, $sentry-purple-primary, $sentry-purple-secondary);
    padding: space('md') space('xl');
    position: sticky;
    top: 0;
    z-index: 100;
    
    .logo {
      height: 40px;
      width: auto;
      filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
    }
    
    nav {
      @include flex-center;
      gap: space('lg');
      
      a {
        color: color('text');
        text-decoration: none;
        position: relative;
        
        &::after {
          content: '';
          position: absolute;
          bottom: -4px;
          left: 0;
          width: 0;
          height: 2px;
          background: $sentry-pink;
          transition: width 250ms ease-in-out;
        }
        
        &:hover::after,
        &.active::after {
          width: 100%;
        }
      }
    }
  }
  
  // Error Dashboard
  &__dashboard {
    padding: space('xl');
    
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: space('lg');
      margin-bottom: space('xl');
      
      .stat-card {
        @extend %card-base;
        
        &__label {
          color: color('text-muted');
          font-size: 0.875rem;
          text-transform: uppercase;
          letter-spacing: 0.05em;
        }
        
        &__value {
          font-size: 2.5rem;
          font-weight: 700;
          background: linear-gradient(135deg, $sentry-purple-secondary, $sentry-pink);
          -webkit-background-clip: text;
          -webkit-text-fill-color: transparent;
          background-clip: text;
        }
        
        &--error {
          border-left: 4px solid color('error');
        }
        
        &--warning {
          border-left: 4px solid color('warning');
        }
        
        &--success {
          border-left: 4px solid color('success');
        }
      }
    }
  }
  
  // Buttons
  &__button {
    @include button-variant($sentry-purple-secondary);
    
    &--primary {
      @include button-variant($sentry-purple-secondary);
    }
    
    &--error {
      @include button-variant($sentry-pink);
    }
    
    &--warning {
      @include button-variant($sentry-orange);
    }
    
    &--ghost {
      @include button-variant(transparent, color('text'));
      border: 1px solid currentColor;
      
      &:hover:not(:disabled) {
        background-color: rgba(255, 255, 255, 0.1);
      }
    }
  }
}

// Responsive Utilities
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'mobile' {
    @media (max-width: 767px) { @content; }
  } @else if $breakpoint == 'tablet' {
    @media (min-width: 768px) and (max-width: 1023px) { @content; }
  } @else if $breakpoint == 'desktop' {
    @media (min-width: 1024px) { @content; }
  }
}

// Usage
.responsive-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: space('md');
  
  @include respond-to('tablet') {
    grid-template-columns: repeat(2, 1fr);
  }
  
  @include respond-to('mobile') {
    grid-template-columns: 1fr;
  }
}

// For Loops
@for $i from 1 through 6 {
  .margin-#{$i} {
    margin: #{$i * 0.25}rem;
  }
}

// Each Loops
@each $name, $color in $colors {
  .text-#{$name} {
    color: $color;
  }
  
  .bg-#{$name} {
    background-color: $color;
  }
}

// While Loop (rarely used)
$z: 6;
@while $z > 0 {
  .z-index-#{$z} {
    z-index: $z * 10;
  }
  $z: $z - 1;
}

// Conditional Styles
@mixin theme-aware($property, $light-value, $dark-value) {
  #{$property}: $dark-value;
  
  @media (prefers-color-scheme: light) {
    #{$property}: $light-value;
  }
  
  [data-theme="light"] & {
    #{$property}: $light-value;
  }
}
